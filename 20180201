막대

막대 3개로 삼각형을 만들고 주어진 형태의 도형을 만드는데 필요한 개수를 계산하는 프로그램

첫번째 함수
1. N개의 삼각형 막대 개수 세기
막대의 개수 = 3+(N-1)*2
=> 주어진 식 그대로 코드로 옮기기

두번째 함수
1. N개 피라미드에 필요한 막대 개수 세기(A)
식=3+(2N-2)*2
N = 4, ((3+(2*4-2)*2)+((3+(2*3-2)*2)+((3+(2*2-2)*2)+((3+(2*1-2)*2)) = 36
반복문 이용
(3 + (2N - 2) * 2)의 N 값 줄여가면서 누적함

int sum = 0;
for(피라미드층; 피라미드층>0; 피라미드층--) {
    sum = sum + (3 + ((( 2*피라미드층) - 2) * 2));
}

2. N-1 부터 1까지 합 구하기(B)
N=4 일 때 3+2+1=6

int nSum = 0;
while(피라미드층 != 1) {
    nSum = nSum + (피라미드층 - 1);
    피라미드층 = 피라미드층 - 1;
}
3. (A) - (B) 구하기
피라미드막대 = sum - nSum

1. N개의 삼각형을 만들기 위한 막대 개수를 구하는 기능
2. N층의 피라미드를 만들기 위한 막대 개수를 구하는 기능




package com.lgcns.tct.stick;

public class Stick {
	
	
	/**
	 * N개의 삼각형을 만들기 위한 막대 개수를 구하는 기능
	 *
     * @param		inputData			int		입력데이터(삼각형 개수)
     * @return							int		막대 개수
	 */
	public int getNumberOfStickForTriangle(int inputData) {
		int numberOfStickForTriangle = 0;
		////////////////////////여기부터 구현 (1) ---------------->
		
		numberOfStickForTriangle = 3+(inputData-1) * 2;
		
		
		///////////////////////////// <-------------- 여기까지 구현 (1)
		return numberOfStickForTriangle;
	}
	
	
	/**
	 * N층의 피라미드를 만들기 위한 막대 개수를 구하는 기능
	 *
     * @param		numberOfLayers			int		입력데이터(피라미드 층수)
     * @return								int		막대 개수
	 */
	public int getNumberOfStickForPyramid(int numberOfLayers) {
		int numberOfStickForPyramid = 0;
		////////////////////////여기부터 구현 (2) ---------------->
		
		int tmpLayer = numberOfLayers;
		int sum = 0;
		
		for(;tmpLayer>0;tmpLayer--){
			sum = sum + (3+(((2*tmpLayer)-2)*2));
		}
		
		int sum1 = 0;
		while(numberOfLayers != 1){
			sum1 = sum1 + (numberOfLayers-1);
			numberOfLayers--;
		}
		
		numberOfStickForPyramid = sum - sum1;
		
		///////////////////////////// <-------------- 여기까지 구현 (2)
		return numberOfStickForPyramid;
	}
	
}
